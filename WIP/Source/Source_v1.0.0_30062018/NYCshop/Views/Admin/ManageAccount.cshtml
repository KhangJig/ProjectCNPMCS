@model List<NYCshop.ViewModels.UserViewModel.AccInManageAccViewModel>
@using PagedList.Mvc

@{
    ViewBag.Title = "Quản lý tài khoản";
    ViewBag.ParentActionName = "ManageAccount";
    ViewBag.ParentSelectedFunction = "Quản lý tài khoản";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";

    PagedList.IPagedList pagedList = ViewBag.PagedList;

    int totalPages = ViewBag.TotalPages != null ? ViewBag.TotalPages : 0;
    string viewType = ViewBag.ViewType != null ? ViewBag.ViewType : "Tất cả";
    string searchKey = ViewBag.SearchKey;
    string userAction = ViewBag.UserAction;
}

<style>
    div.row.sticky {
        top: 0;
        background-color: white;
    }

    table.sticky {
        top: 50px;
        background-color: white;
    }

    input[type="checkbox"] {
        cursor: pointer;
        transform: scale(1.5);
    }
</style>

<div class="col-md-9">
    <div class="box">
        <h1>Quản lý tài khoản</h1>
        <p class="lead">Xem thông tin các tài khoản, khóa, mở khóa tài khoản</p>

        @using (Html.BeginForm("ManageAccount", "Admin", FormMethod.Post, new { @name = "model", id = "my-form" }))
        {
            if (ViewBag.PerformActionMsg != null)
            {
                <div class="alert alert-info alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Thành công!</strong> @ViewBag.PerformActionMsg
                </div>
            }

            if (!ViewData.ModelState.IsValidField(""))
            {
                <div class="alert alert-danger alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    @Html.ValidationSummary(true)
                </div>
            }

            <h4>Hiện tại có <u>@pagedList.TotalItemCount</u> tài khoản @viewType.ToLower()</h4>

            <div class="row sticky">
                <div class="pull-left">
                    <input id="view-type-hidden" type="hidden" value="@viewType" />
                    <select id="view-type" name="viewType" class="col-md-3 form-control" style="width:auto; margin:5px;">
                        <option>Tất cả</option>
                        <option>Bị khóa</option>
                        <option>Mở khóa</option>
                    </select>
                    <input name="search" type="text" placeholder="Tên người dùng" class="col-md-3 form-control" style="width:auto; margin:5px;" value="@searchKey" />
                    <input class="col-md-3 form-control btn btn-primary" style="width: auto; margin:5px;" type="submit" value="Xem" />
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="sticky-header">
                        <tr>
                            <th>
                                @if (Model.Count > 0)
                                {
                                    <div class="input-group">
                                        <span class="input-group-btn">
                                            <input id="select-all-checkbox" type="checkbox" onchange="onCheckAll(this)" />
                                        </span>
                                        <span class="input-group-btn">
                                            @switch (viewType)
                                            {
                                                default:
                                                    <select id="action" name="userAction" onchange="onchangeAction(this)" class="form-control" style="width:auto; margin:5px; text-decoration: none;" data-target="#myModal" data-keyboard="false" data-backdrop="static" disabled>
                                                        <option selected hidden>Hành động</option>
                                                        <option>Khóa tài khoản</option>
                                                        <option>Mở khóa tài khoản</option>
                                                    </select>
                                                    break;
                                                case "Bị khóa":
                                                    <select id="action" name="userAction" onchange="onchangeAction(this)" class="form-control" style="width:auto; margin:5px; text-decoration: none;" data-target="#myModal" data-keyboard="false" data-backdrop="static" disabled>
                                                        <option selected hidden>Hành động</option>
                                                        <option>Mở khóa tài khoản</option>
                                                    </select>
                                                    break;
                                                case "Mở khóa":
                                                    <select id="action" name="userAction" onchange="onchangeAction(this)" class="form-control" style="width:auto; margin:5px; text-decoration: none;" data-target="#myModal" data-keyboard="false" data-backdrop="static" disabled>
                                                        <option selected hidden>Hành động</option>
                                                        <option>Khóa tài khoản</option>
                                                    </select>
                                                    break;
                                            }
                                        </span>

                                    </div>

                                }
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Username)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].JoiningDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Active)
                            </th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @for (int i = 0; i < Model.Count && i < pagedList.PageSize * pagedList.PageNumber; i++)
                        {
                            <tr>
                                <td class="col">
                                    @if (Model.Count > 0)
                                    {
                                        @Html.CheckBoxFor(modelItem => Model[i].PerformAction, new { @onchange = "onCheckedItem(this)" })
                                    }
                                </td>
                                <td class="col">
                                    @Html.HiddenFor(modelItem => Model[i].Username)
                                    @Html.DisplayFor(modelItem => Model[i].Username)
                                </td>
                                <td class="col">
                                    @Html.HiddenFor(modelItem => Model[i].Name)
                                    @Html.DisplayFor(modelItem => Model[i].Name)
                                </td>
                                <td class="col">
                                    @Html.HiddenFor(modelItem => Model[i].JoiningDate)
                                    @Html.DisplayFor(modelItem => Model[i].JoiningDate)
                                </td>
                                <td class="col">
                                    @Html.HiddenFor(modelItem => Model[i].Active)
                                    @if (!Model[i].Active)
                                    {
                                        <label>Khóa</label>
                                    }
                                    else
                                    {
                                        <label>Mở khóa</label>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        <label>Trang @(totalPages < pagedList.PageNumber ? 0 : pagedList.PageNumber) / @totalPages</label>
        @Html.PagedListPager(pagedList, page => Url.Action("ManageAccount", new { page, viewType, search = searchKey, userAction }))


    </div>
</div>

<script>
    function onCheckAll(e) {
        if (e.checked) {
            $("input[name*='PerformAction']").each(function () {
                $(this).prop('checked', true);
            });

            // cho phép thực hiện hành động
            $("#action").prop('disabled', false);
        }
        else {
            $("input[name*='PerformAction']").each(function () {
                $(this).prop('checked', false);
            });

            // không cho phép thực hiện hành động
            $("#action").prop('disabled', true);
        }
    }

    function onCheckedItem(e) {
        var delProductCheckboxs = $("input[name*='PerformAction']:hidden");
        var deleteAllCheckbox = document.getElementById("select-all-checkbox");
        var checkedDelProduct = $("input[name*='PerformAction']:checked");
        if (!e.checked) { // nếu bỏ 1 nút xóa con thì bỏ chọn lun cả nút xóa tất cả
            if (deleteAllCheckbox.checked)
                $(deleteAllCheckbox).prop('checked', false);
        }
        else { // nếu đã chọn tất cả các nút xóa con thì chọn lun cả nút xóa tất cả
            if (delProductCheckboxs.length == checkedDelProduct.length)
                $(deleteAllCheckbox).prop('checked', true);
        }

        if (checkedDelProduct.length == 0)
            // không cho phép thực hiện hành động
            $("#action").prop('disabled', true);
        else // cho phép thực hiện hành động
            $("#action").prop('disabled', false);
    }

    function onchangeAction(e) {
        $('#my-form').submit();
    }
</script>
