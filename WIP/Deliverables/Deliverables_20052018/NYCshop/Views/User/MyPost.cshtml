@model List<NYCshop.Models.ProductManagerViewModel>
@using PagedList.Mvc

@{
    ViewBag.Title = "Quản lý tin";
    ViewBag.ParentActionName = "MyPost";
    ViewBag.ParentSelectedFunction = "Quản lý tin";
    Layout = "~/Views/Shared/_AccountLayout.cshtml";

    PagedList.IPagedList pagedList = ViewBag.PagedList;
}

<style>
    .col {
        width: 200px;
    }

    .book-cover {
        width: 100px;
    }

    .delete-icon, .edit-icon {
        width: 30px;
        cursor: pointer;
    }

    input[type="checkbox"] {
        cursor: pointer;
        transform: scale(1.5);
    }

    .product-image {
        height: 100px;
    }

    .btn-new-post {
        margin-bottom: 15px;
    }
</style>

<div class="col-md-9">
    <div class="box">
        <h3>Quản lý bài tin</h3>

        @if(Model.Count == 0)
        {
            <div class="text-center">
                <h4>Hiện tại bạn có 0 tin. Đăng tin ngay!!</h4>
                <a href="@Url.Action("NewPost")" class="btn btn-primary"><i class="fa fa-cloud-upload"></i>Đăng tin mới</a>
            </div> 
        }
        else
        {
            using(Html.BeginForm("MyPost", "User", FormMethod.Post, new { @name="model", id = "my-form" } ))
            {
                if (ViewBag.DeleteProductMsg != null)
                {
                    <div class="alert alert-info alert-dismissible">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <strong>Thành công!</strong> @ViewBag.DeleteProductMsg <a href="">Hoàn tác</a>
                    </div>
                }
                if (!ViewData.ModelState.IsValidField(""))
                {
                    <div class="alert alert-danger alert-dismissible">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        @Html.ValidationSummary(true)
                    </div>
                }
                
                <h4>Hiện tại bạn có <u>@Model.Count</u> tin</h4>
            
                <div class="row">
                    <div class="pull-left">
                        <button type="button" class="btn btn-primary" onclick="onclickSaveButton(this)" data-target="#myModal" data-keyboard="false" data-backdrop="static"><i class="fa fa-save"></i>Cập nhật</button>
                    </div>
                    <div class="pull-right">
                        <a href="@Url.Action("NewPost")" class="btn btn-primary"><i class="fa fa-cloud-upload"></i>Đăng tin mới</a>
                    </div>
                </div>

            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DeleteProduct)
                            </th>
                            <th>
                                Sửa
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Image)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].ProductName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Quanlity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].SaleStatus)
                            </th>
                            <th></th>
                        </tr>
                        <tr>
                            <th>
                                <input id="select-all-delete-checkbox" type="checkbox" onchange="onDeleteAllCheck(this)"/>
                            </th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th>
                                <input id="select-all-soldout-checkbox" type="checkbox" onchange="onSoldoutAllCheck(this)" />
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                
                    <tbody>
                        @for (int i = pagedList.PageSize * (pagedList.PageNumber - 1); i < Model.Count && i < pagedList.PageSize * pagedList.PageNumber; i++)
                        {
                            <tr>
                                <td class="col">
                                    @Html.HiddenFor(modelItem => Model[i].ProductID)
                                    @Html.CheckBoxFor(modelItem => Model[i].DeleteProduct, new { @onchange = "onDeleteCheck(this)" })
                                </td>
                                <td class="col">
                                    <a href="@Url.Action("EditProduct", "User", new { Model[i].ProductID }, null)"><i style="font-size: 30px;" class="fa fa-edit"></i></a>
                                </td>
                                <td class="col">
                                    <img src="@Model[i].Image" class="product-image" />
                                </td>
                                <td class="col">
                                    @Html.DisplayFor(modelItem => Model[i].ProductName)
                                </td>
                                <td class="col">
                                    @Html.DisplayFor(modelItem => Model[i].Price)
                                </td>
                                <td class="col">
                                    @Html.DisplayFor(modelItem => Model[i].Quanlity)
                                </td>
                                <td class="col">
                                    @Html.CheckBoxFor(modelItem => Model[i].SaleStatus, new { @onchange = "onSoldoutCheck(this)" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                </div>
            }

            <label>Trang @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) / @pagedList.PageCount</label>
            @Html.PagedListPager(pagedList, page => Url.Action("MyPost", new { page }))
        }
        
    </div>
</div>

<script>
    function onDeleteAllCheck(e) {
        if (e.checked) {
            $("input[name*='DeleteProduct']").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $("input[name*='DeleteProduct']").each(function () {
                $(this).prop('checked', false);
            });
        }
    }

    function onSoldoutAllCheck(e) {
        if (e.checked) {
            $("input[name*='SaleStatus']").each(function () {
                $(this).prop('checked', true);
            });
        }
        else {
            $("input[name*='SaleStatus']").each(function () {
                $(this).prop('checked', false);
            });
        }
    }

    function onDeleteCheck(e) {
        var delProductCheckboxs = $("input[name*='DeleteProduct']:hidden");
        var deleteAllCheckbox = document.getElementById("select-all-delete-checkbox");
        if (!e.checked) { // nếu bỏ 1 nút xóa con thì bỏ chọn lun cả nút xóa tất cả
            if(deleteAllCheckbox.checked)
                $(deleteAllCheckbox).prop('checked', false);
        }
        else { // nếu đã chọn tất cả các nút xóa con thì chọn lun cả nút xóa tất cả
            var checkedDelProduct = $("input[name*='DeleteProduct']:checked");
            if(delProductCheckboxs.length == checkedDelProduct.length)
                $(deleteAllCheckbox).prop('checked', true);
        }
    }

    function onSoldoutCheck(e) {
        var soldoutCheckboxs = $("input[name*='SaleStatus']:hidden");
        var soldoutAllCheckbox = document.getElementById("select-all-soldout-checkbox");
        if (!e.checked) { // nếu bỏ 1 nút xóa con thì bỏ chọn lun cả nút xóa tất cả
            if (soldoutAllCheckbox.checked)
                $(soldoutAllCheckbox).prop('checked', false);
        }
        else { // nếu đã chọn tất cả các nút xóa con thì chọn lun cả nút xóa tất cả
            var checkedSoldoutProduct = $("input[name*='SaleStatus']:checked");
            if (soldoutCheckboxs.length == checkedSoldoutProduct.length)
                $(soldoutAllCheckbox).prop('checked', true);
        }
    }

    function onclickSaveButton() {
        var checkedDelProduct = $("input[name*='DeleteProduct']:checked");
        if (checkedDelProduct.length == 0)
            alert("Chọn sản phẩm cần xóa");
        else $("#myModal").modal();
    }
</script>

@{Html.RenderAction("ConfirmPassword", "Account");}
@*@Html.Partial("_ConfirmPasswordPartial")*@